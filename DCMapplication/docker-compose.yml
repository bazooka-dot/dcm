services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dcm}
      POSTGRES_USER: ${POSTGRES_USER:-dcm_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dcm_password}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-data.sql:/docker-entrypoint-initdb.d/init-data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dcm_user} -d ${POSTGRES_DB:-dcm}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  app:
    build:
      context: .
    image: dcm-app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-dcm}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-dcm_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-dcm_password}
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
    restart: unless-stopped
volumes:
  postgres_data: